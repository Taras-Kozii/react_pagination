{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","perPage","total","onPageChange","quantityPagination","Math","ceil","paginations","className","classNames","disabled","href","onClick","map","pagination","active","arrNums","App","useState","setPerPage","setCurrentPage","items","setItems","fromItemValue","toItemValue","length","useEffect","splice","id","onChange","event","target","value","htmlFor","elem","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,aAEMC,EAAqBC,KAAKC,KAAKJ,EAAQD,GACvCM,EAAcd,EAAW,EAAGW,GAQlC,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAA0B,IAAhBV,IAAnD,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAdY,kBAChBT,EADuBH,EAAc,EACxBA,EAAc,EAAkB,IAQ3C,oBAWDO,EAAYM,KAAI,SAAAC,GAAU,OACzB,oBACEN,UAAWC,IAAW,YACpB,CAAEM,OAAQf,IAAgBc,IAF9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUV,IAAgBI,IAD9B,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBI,EAC/BQ,QA1CY,kBAChBT,EADuBH,EAAcI,EACxBJ,EAAc,EAAkBI,IAoC3C,wBCtDFY,EAAUvB,EAAW,EAAG,IAEjBwB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KACA,EAA0BF,mBAAmB,IAA7C,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAgC,IAAhBvB,EAAoB,GAAKA,EAAc,GAAKC,EAAU,EACtEuB,EAAcxB,EAAcC,EAAUe,EAAQS,OAChDT,EAAQS,OAASzB,EAAcC,EAWnC,OAJAyB,qBAAU,WACRJ,EAAS,YAAKN,GAAUW,QAAQ3B,EAAc,GAAKC,EAASA,GAASY,KAAI,SAAAhB,GAAC,qBAAYA,SACrF,CAACG,EAAaC,IAGf,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACoDC,EADpD,eACsER,EAAQS,OAD9E,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,SAvBe,SAACC,GACxBX,GAAYW,EAAMC,OAAOC,OACzBZ,EAAe,IAsBPY,MAAO/B,EALT,UAOE,wBAAQ+B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,YAAaA,EACbC,QAASA,EACTC,MAAOc,EAAQS,OACftB,aAAciB,IAEhB,6BACGC,EAAMR,KAAI,SAAAqB,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ceccf595.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  currentPage: number,\n  onPageChange: (num: number) => void,\n  perPage: number,\n  total: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  perPage,\n  total,\n  onPageChange,\n}) => {\n  const quantityPagination = Math.ceil(total / perPage);\n  const paginations = getNumbers(1, quantityPagination);\n\n  const onPrevClick = () => (currentPage > 1\n    ? onPageChange(currentPage - 1) : onPageChange(1));\n\n  const onNextClick = () => (currentPage < quantityPagination\n    ? onPageChange(currentPage + 1) : onPageChange(quantityPagination));\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={onPrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {paginations.map(pagination => (\n        <li\n          className={classNames('page-item',\n            { active: currentPage === pagination })}\n          key={pagination}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pagination}`}\n            onClick={() => onPageChange(pagination)}\n          >\n            {pagination}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item',\n        { disabled: currentPage === quantityPagination })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === quantityPagination}\n          onClick={onNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst arrNums = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [items, setItems] = useState<string[]>([]);\n\n  const fromItemValue = currentPage === 1 ? 1 : (currentPage - 1) * perPage + 1;\n  const toItemValue = currentPage * perPage > arrNums.length\n    ? arrNums.length : currentPage * perPage;\n\n  const handlePageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    setItems(([...arrNums]).splice((currentPage - 1) * perPage, perPage).map(n => `Item ${n}`));\n  }, [currentPage, perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItemValue} - ${toItemValue} of ${arrNums.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePageChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={currentPage}\n        perPage={perPage}\n        total={arrNums.length}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {items.map(elem => (\n          <li data-cy=\"item\" key={elem}>{elem}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}